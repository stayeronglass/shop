# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'

services:

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }


    admin.material:
        class: App\Admin\MaterialAdmin
        arguments: [~, App\Entity\Material, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Material }
        public: true

    admin.manufacturer:
        class: App\Admin\ManufacturerAdmin
        arguments: [~, App\Entity\Manufacturer, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Manufacturer }
        public: true

    admin.category:
        class: App\Admin\CategoryAdmin
        arguments: [~, App\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Category }
        public: true

    admin.product:
        class: App\Admin\ProductAdmin
        arguments: [~, App\Entity\Product, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Product }
        public: true

    admin.delivery:
        class: App\Admin\DeliveryAdmin
        arguments: [~, App\Entity\Delivery, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Delivery }
        public: true

    admin.payment:
        class: App\Admin\PaymentAdmin
        arguments: [~, App\Entity\Payment, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Payment }
        public: true
